// <auto-generated />
using System;
using Kolos_retake;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kolos_retake.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    partial class CustomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kolos_retake.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityIdCity");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100);

                    b.Property<int>("IdArtMovement");

                    b.Property<int>("IdCityOfBirth");

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<string>("NickName")
                        .HasMaxLength(100);

                    b.HasKey("IdArtist");

                    b.HasIndex("CityIdCity");

                    b.HasIndex("IdArtMovement")
                        .IsUnique();

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Kolos_retake.Models.ArtMovement", b =>
                {
                    b.Property<int>("IdArtMovement")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtMovementIdArtMovement");

                    b.Property<DateTime>("DateFounded");

                    b.Property<int>("IdMovementFounder");

                    b.Property<int?>("IdNextArtMovement");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("IdArtMovement");

                    b.HasIndex("ArtMovementIdArtMovement");

                    b.ToTable("ArtMovements");
                });

            modelBuilder.Entity("Kolos_retake.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Population");

                    b.HasKey("IdCity");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Kolos_retake.Models.Painting", b =>
                {
                    b.Property<int>("IdPainting")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdArtist");

                    b.Property<int>("IdCoAuthor");

                    b.Property<string>("PaintingMedia");

                    b.Property<string>("SurfaceType");

                    b.HasKey("IdPainting");

                    b.HasIndex("IdArtist");

                    b.ToTable("Paintings");
                });

            modelBuilder.Entity("Kolos_retake.Models.Artist", b =>
                {
                    b.HasOne("Kolos_retake.Models.City", "City")
                        .WithMany("Artists")
                        .HasForeignKey("CityIdCity");

                    b.HasOne("Kolos_retake.Models.ArtMovement", "ArtMovement")
                        .WithOne("Founder")
                        .HasForeignKey("Kolos_retake.Models.Artist", "IdArtMovement")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kolos_retake.Models.ArtMovement", b =>
                {
                    b.HasOne("Kolos_retake.Models.ArtMovement")
                        .WithMany("ArtMovements")
                        .HasForeignKey("ArtMovementIdArtMovement");
                });

            modelBuilder.Entity("Kolos_retake.Models.Painting", b =>
                {
                    b.HasOne("Kolos_retake.Models.Artist", "Artist")
                        .WithMany("CreatedPaintings")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
